{"ast":null,"code":"import PastryDataService from '@/services/PastryDataService';\nexport default {\n  props: ['addInv'],\n  data() {\n    return {\n      pastry: {\n        name: '',\n        category: '',\n        description: '',\n        price: '',\n        photo: ''\n      },\n      submitted: false,\n      message: null\n    };\n  },\n  methods: {\n    // create\n    savePastry() {\n      PastryDataService.create(this.pastry).then(res => {\n        this.pastry.id = res.data.id;\n        this.addInv(this.pastry);\n        this.message = null;\n        this.submitted = true;\n        // this.$router.push({ name: 'home' })\n        // console.log(this.submitted)\n      }).catch(err => {\n        console.log(err.response.data.message);\n        this.message = err.response.data.message;\n      });\n    },\n    // reset add form\n    newPastry() {\n      this.submitted = false;\n      this.pastry = {};\n    }\n  }\n};","map":{"version":3,"names":["PastryDataService","props","data","pastry","name","category","description","price","photo","submitted","message","methods","savePastry","create","then","res","id","addInv","catch","err","console","log","response","newPastry"],"sources":["/Users/elisabeththeoret/Desktop/_PROG_WEB/_ALL_SESSION/582-41F_tech_avancees_prog/all_evalue/TP03/ms-fabulous_vuejs/frontend/src/views/NewPastryView.vue"],"sourcesContent":["<template>\n  <!-- Header Page -->\n  <header class=\"flex col\">\n    <h1>Nouvelle pâtisserie</h1>\n    <p>Remplissez le formulaire ci-dessous afin d'ajouter une nouvelle pâtisserie.</p>\n  </header>\n  <!-- Form -->\n  <form class=\"flex col gap-petit bg-light_marron\">\n    <small class=\"texte-\">Les champs indiqués par une étoile (<code>*</code>) sont requis.</small>\n    <div class=\"boite bg-light_rosemauve\" v-show=\"message\">{{ message }}</div>\n    <div class=\"needs-validation grille-lg gap-moyen\" novalidate>\n      <div class=\"flex col\">\n        <div class=\"form-control\">\n          <label for=\"name\">Nom de la pâtisserie*</label>\n          <input type=\"text\" name=\"name\" id=\"name\" v-model=\"pastry.name\" required />\n        </div>\n        <div class=\"form-control\">\n          <label for=\"category\">Catégorie</label>\n          <input type=\"text\" name=\"category\" id=\"category\" v-model=\"pastry.category\" />\n        </div>\n        <div class=\"form-control\">\n          <label for=\"price\">Prix*</label>\n          <div class=\"flex row gap-mini align-center\">\n            <span>$</span>\n            <input type=\"text\" name=\"price\" id=\"price\" placeholder=\"$ 00.00\" v-model=\"pastry.price\" required />\n          </div>\n        </div>\n        <div class=\"form-control\">\n          <label for=\"photo\">Photo</label>\n          <input type=\"text\" name=\"photo\" id=\"photo\" v-model=\"pastry.photo\" />\n        </div>\n      </div>\n      <div class=\"form-control\">\n        <label for=\"description\">Description*</label>\n        <textarea name=\"description\" id=\"description\" v-model=\"pastry.description\" required></textarea>\n      </div>\n    </div>\n    <nav class=\"flex row align-baseline gap-normal\">\n      <router-link :to=\"{ name: 'pastry' }\" class=\"\">Annuler</router-link>\n      <button class=\"btn btn-submit\" @click=\"saveProduct\">Ajouter</button>\n    </nav>\n  </form>\n</template>\n\n<script>\nimport PastryDataService from '@/services/PastryDataService'\n\nexport default {\n\n  props: ['addInv'],\n\n  data () {\n    return {\n      pastry: {\n        name: '',\n        category: '',\n        description: '',\n        price: '',\n        photo: ''\n      },\n      submitted: false,\n      message: null\n    }\n  },\n\n  methods: {\n    // create\n    savePastry () {\n      PastryDataService.create(this.pastry).then(res => {\n        this.pastry.id = res.data.id\n        this.addInv(this.pastry)\n        this.message = null\n        this.submitted = true\n        // this.$router.push({ name: 'home' })\n        // console.log(this.submitted)\n      }).catch(err => {\n        console.log(err.response.data.message)\n        this.message = err.response.data.message\n      })\n    },\n\n    // reset add form\n    newPastry () {\n      this.submitted = false\n      this.pastry = {}\n    }\n  }\n\n}\n</script>\n"],"mappings":"AA6CA,OAAOA,iBAAgB,MAAO,8BAA6B;AAE3D,eAAe;EAEbC,KAAK,EAAE,CAAC,QAAQ,CAAC;EAEjBC,IAAGA,CAAA,EAAK;IACN,OAAO;MACLC,MAAM,EAAE;QACNC,IAAI,EAAE,EAAE;QACRC,QAAQ,EAAE,EAAE;QACZC,WAAW,EAAE,EAAE;QACfC,KAAK,EAAE,EAAE;QACTC,KAAK,EAAE;MACT,CAAC;MACDC,SAAS,EAAE,KAAK;MAChBC,OAAO,EAAE;IACX;EACF,CAAC;EAEDC,OAAO,EAAE;IACP;IACAC,UAASA,CAAA,EAAK;MACZZ,iBAAiB,CAACa,MAAM,CAAC,IAAI,CAACV,MAAM,CAAC,CAACW,IAAI,CAACC,GAAE,IAAK;QAChD,IAAI,CAACZ,MAAM,CAACa,EAAC,GAAID,GAAG,CAACb,IAAI,CAACc,EAAC;QAC3B,IAAI,CAACC,MAAM,CAAC,IAAI,CAACd,MAAM;QACvB,IAAI,CAACO,OAAM,GAAI,IAAG;QAClB,IAAI,CAACD,SAAQ,GAAI,IAAG;QACpB;QACA;MACF,CAAC,CAAC,CAACS,KAAK,CAACC,GAAE,IAAK;QACdC,OAAO,CAACC,GAAG,CAACF,GAAG,CAACG,QAAQ,CAACpB,IAAI,CAACQ,OAAO;QACrC,IAAI,CAACA,OAAM,GAAIS,GAAG,CAACG,QAAQ,CAACpB,IAAI,CAACQ,OAAM;MACzC,CAAC;IACH,CAAC;IAED;IACAa,SAAQA,CAAA,EAAK;MACX,IAAI,CAACd,SAAQ,GAAI,KAAI;MACrB,IAAI,CAACN,MAAK,GAAI,CAAC;IACjB;EACF;AAEF"},"metadata":{},"sourceType":"module","externalDependencies":[]}